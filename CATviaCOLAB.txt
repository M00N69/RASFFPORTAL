import pandas as pd

# Load the CSV file
file_path = '/content/rasff_ 2020TO30OCT2024.csv'  # Update with the path to your file in Google Colab
df = pd.read_csv(file_path)

# Define the mappings for PRODCAT and HAZCAT with high-level GROUPPROD and GROUPHAZ categories
product_category_mapping = {
    "alcoholic beverages": ("Alcoholic Beverages", "Beverages"),
    "animal by-products": ("Animal By-products", "Animal Products"),
    "bivalve molluscs and products thereof": ("Bivalve Molluscs", "Seafood"),
    "cephalopods and products thereof": ("Cephalopods", "Seafood"),
    "cereals and bakery products": ("Cereals and Bakery Products", "Grains and Bakery"),
    "cocoa and cocoa preparations, coffee and tea": ("Cocoa, Coffee, and Tea", "Beverages"),
    "compound feeds": ("Compound Feeds", "Animal Feed"),
    "confectionery": ("Confectionery", "Grains and Bakery"),
    "crustaceans and products thereof": ("Crustaceans", "Seafood"),
    "dietetic foods, food supplements and fortified foods": ("Dietetic Foods and Supplements", "Specialty Foods"),
    "eggs and egg products": ("Eggs and Egg Products", "Animal Products"),
    "fats and oils": ("Fats and Oils", "Fats and Oils"),
    "feed additives": ("Feed Additives", "Animal Feed"),
    "feed materials": ("Feed Materials", "Animal Feed"),
    "feed premixtures": ("Feed Premixtures", "Animal Feed"),
    "fish and fish products": ("Fish and Fish Products", "Seafood"),
    "food additives and flavourings": ("Food Additives and Flavourings", "Additives"),
    "food contact materials": ("Food Contact Materials", "Packaging"),
    "fruits and vegetables": ("Fruits and Vegetables", "Fruits and Vegetables"),
    "gastropods": ("Gastropods", "Seafood"),
    "herbs and spices": ("Herbs and Spices", "Spices"),
    "honey and royal jelly": ("Honey and Royal Jelly", "Specialty Foods"),
    "ices and desserts": ("Ices and Desserts", "Grains and Bakery"),
    "live animals": ("Live Animals", "Animal Products"),
    "meat and meat products (other than poultry)": ("Meat (Non-Poultry)", "Meat Products"),
    "milk and milk products": ("Milk and Milk Products", "Dairy"),
    "natural mineral waters": ("Natural Mineral Waters", "Beverages"),
    "non-alcoholic beverages": ("Non-Alcoholic Beverages", "Beverages"),
    "nuts, nut products and seeds": ("Nuts and Seeds", "Seeds and Nuts"),
    "other food product / mixed": ("Mixed Food Products", "Other"),
    "pet food": ("Pet Food", "Animal Feed"),
    "plant protection products": ("Plant Protection Products", "Additives"),
    "poultry meat and poultry meat products": ("Poultry Meat", "Meat Products"),
    "prepared dishes and snacks": ("Prepared Dishes and Snacks", "Prepared Foods"),
    "soups, broths, sauces and condiments": ("Soups, Broths, Sauces", "Prepared Foods"),
    "water for human consumption (other)": ("Water (Human Consumption)", "Beverages"),
    "wine": ("Wine", "Beverages")
}

# Hazard Category and Group mappings
hazard_category_mapping = {
    "GMO / novel food": ("GMO / Novel Food", "Food Composition"),
    "TSEs": ("Transmissible Spongiform Encephalopathies (TSEs)", "Biological Hazard"),
    "adulteration / fraud": ("Adulteration / Fraud", "Food Fraud"),
    "allergens": ("Allergens", "Biological Hazard"),
    "biological contaminants": ("Biological Contaminants", "Biological Hazard"),
    "biotoxins (other)": ("Biotoxins", "Biological Hazard"),
    "chemical contamination (other)": ("Chemical Contamination", "Chemical Hazard"),
    "composition": ("Composition", "Food Composition"),
    "environmental pollutants": ("Environmental Pollutants", "Chemical Hazard"),
    "feed additives": ("Feed Additives", "Chemical Hazard"),
    "food additives and flavourings": ("Food Additives and Flavourings", "Additives"),
    "foreign bodies": ("Foreign Bodies", "Physical Hazard"),
    "genetically modified": ("Genetically Modified", "Food Composition"),
    "heavy metals": ("Heavy Metals", "Chemical Hazard"),
    "industrial contaminants": ("Industrial Contaminants", "Chemical Hazard"),
    "labelling absent/incomplete/incorrect": ("Labelling Issues", "Food Fraud"),
    "migration": ("Migration", "Chemical Hazard"),
    "mycotoxins": ("Mycotoxins", "Biological Hazard"),
    "natural toxins (other)": ("Natural Toxins", "Biological Hazard"),
    "non-pathogenic micro-organisms": ("Non-Pathogenic Micro-organisms", "Biological Hazard"),
    "not determined (other)": ("Not Determined", "Other"),
    "novel food": ("Novel Food", "Food Composition"),
    "organoleptic aspects": ("Organoleptic Aspects", "Other"),
    "packaging defective / incorrect": ("Packaging Issues", "Physical Hazard"),
    "parasitic infestation": ("Parasitic Infestation", "Biological Hazard"),
    "pathogenic micro-organisms": ("Pathogenic Micro-organisms", "Biological Hazard"),
    "pesticide residues": ("Pesticide Residues", "Pesticide Hazard"),
    "poor or insufficient controls": ("Insufficient Controls", "Food Fraud"),
    "radiation": ("Radiation", "Physical Hazard"),
    "residues of veterinary medicinal": ("Veterinary Medicinal Residues", "Chemical Hazard")
}

# Function to match categories and group categories
def map_category(value, mapping):
    if pd.isna(value):
        return ("Unknown", "Unknown")
    for key, (category, group) in mapping.items():
        if key in value.lower():  # case-insensitive matching
            return (category, group)
    return ("Unknown", "Unknown")

# Apply mappings for PRODCAT, GROUPPROD, HAZCAT, and GROUPHAZ
df[['PRODCAT', 'GROUPPROD']] = df['Product Category'].apply(lambda x: map_category(x, product_category_mapping)).apply(pd.Series)
df[['HAZCAT', 'GROUPHAZ']] = df['Hazard Category'].apply(lambda x: map_category(x, hazard_category_mapping)).apply(pd.Series)

# Save the updated DataFrame to a new CSV with all original columns plus the new ones
output_path = '/content/unified_rasff_data_with_grouping.csv'
df.to_csv(output_path, index=False)
print(f"Unified data with grouping saved to {output_path}")
